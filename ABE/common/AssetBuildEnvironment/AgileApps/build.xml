<?xml version="1.0" encoding="iso-8859-1"?>

<project default="build" basedir="." name="webMethods AgileApps">

    <property name="AgileApps.namespace" value="AgileApps"/>    
    <property name="run.main.class.name" value="com.softwareag.agileapps.deployer.acdl.ACDLGenerator"/>    
    <property name="AgileApps.lib.dir" value="${basedir}/lib" />

    <path id="master-classpath">

		<fileset dir="${AgileApps.lib.dir}">
			<include name="*.jar"/>
		</fileset>

        <fileset dir="${sag.install.dir}/common/lib">
            <include name="wm-acdl-common.jar"/>
        </fileset>

        <fileset dir="${sag.install.dir}/common/lib/ext">
            <include name="commons-io.jar"/>
			<include name="jaxen.jar"/>
			<include name="jdom.jar"/>
			<include name="xercesImpl.jar"/>
			<include name="activation.jar"/>

		</fileset>

		<fileset dir="${sag.install.dir}/common/lib/glassfish">
			<include name="gf.jaxb-api.jar"/>
			<include name="gf.jaxb-core.jar"/>
			<include name="gf.jaxb-impl.jar"/>
			<include name="gf.jaxb-xjc.jar"/>
		</fileset>	

    </path>


	<target name="validate" description="Validates that the all required properties exist">
	    <fail unless="sag.install.dir" message="Required property 'sag.install.dir' is not set" />
	    <fail unless="build.version" message="Required property 'build.version' is not set" />
	    <fail unless="build.output.dir" message="Required property 'build.output.dir' is not set" />

        <if>
            <isset property="build.source.project.dir" />
            <then>
            </then>
        	<else>
        		<fail unless="build.source.dir" message="Required property 'build.source.dir' is not set" />
        	</else>
        </if>

        <if>
            <isset property="build.source.dir" />
            <then>
            </then>
        	<else>
        		<fail unless="build.source.project.dir" message="Required property 'build.source.project.dir' is not set" />
        	</else>
        </if>

	</target>

    <target name="build" depends="validate" description="This will generate required composites for AgileApps assets">    	
		<!-- check multi project folders  -->
		<!-- look into build.source.dir folders -->
		<if>
            <isset property="build.source.dir" />
            <then>
				<antcall target="iterate_source_folders">
					<param name="source.folder.list" value="${build.source.dir}" />
				</antcall>
            </then>
        </if>

		<!-- check single project folders  -->
		<!-- look into build.source.project.dir folders -->
		<if>
            <isset property="build.source.project.dir" />
            <then>
				<antcall target="iterate_source_folders">
					<param name="source.folder.list" value="${build.source.project.dir}" />
				</antcall>
            </then>
        </if>
    </target>
    
	<target name="iterate_source_folders">
		<foreach list="${source.folder.list}"
		         target="generate-composites"
		         param="source.dir"				 
		         delimiter=";">			
			<param name="build.output.dir" value="${build.output.dir}"/>
			<param name="build.version" value="${build.version}"/>
			<param name="max.mem" value="${max.mem}"/>
			<param name="max.perm.size" value="${max.perm.size}"/>
			<param name="sag.install.dir" value="${sag.install.dir}"/>
		</foreach>
	</target>
	
	<target name="generate-composites" depends="" description="This task will generate required composites for the passed configurations">
		<java fork="true" classname="${run.main.class.name}" classpathref="master-classpath" failonerror="true">    	
		   <jvmarg value="${max.mem}" />
		   <jvmarg value="${max.perm.size}"/>
		   <sysproperty key="source.dir" value="${source.dir}"/>
		   <sysproperty key="build.output.dir" value="${build.output.dir}"/>
		   <sysproperty key="build.version" value="${build.version}"/>	   
       	</java>
    </target>
    
    <target name="clean">
		<delete dir="${build.output.dir}/${AgileApps.namespace}" />
    </target>
 
</project>