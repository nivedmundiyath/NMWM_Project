<?xml version="1.0" encoding="UTF-8" ?>
<project name="Asset Build for Bundles" default="build" basedir=".">
    <!-- Configuration properties supplied by the App Platform build script
    
    Initlal component description:
    <property name="component.name" value="name of the component" />
    <property name="component.type" value="type of the component" />
    <property name="component.home" value="directory where the component code is" />
    <property name="component.dependencies" value="list of the component.name-s of dependency projects" />
    
    Resolved component build configuration:
    <property name="component.build.file" value="name of the resulting file" />
    <property name="component.build.dir" value="dirctory where to output the component.file" />
    <property name="component.build.dependencies" value="the resolved compilation classpath to peer projects" />
    <property name="component.build.dependencies.external" value="the resolved compilation classpath to external pre-built BUNDLES" />
    <property name="component.build.version" value="version of this build." />
    <property name="component.build.timestamp" value="time of this build." />
    <property name="component.build.bnd" value="BND configuration file. Specific to bundle projects." />
    -->

    <dirname file="${ant.file}" property="buildfile.dir" />
    
    <!-- 
       Tasks 
    -->
    <!--taskdef resource="net/sf/antcontrib/antcontrib.properties">
        <classpath refid="buildtasks.classpath" />
    </taskdef-->
    
    <path id="buildtasks.classpath">
        <fileset dir="${buildfile.dir}/lib" includes="*.jar" />
    </path>

    <taskdef name="bundle" classname="com.softwareag.platform.app.build.bnd.ant.BuildBundle">
        <classpath refid="buildtasks.classpath" />
    </taskdef>

    <target name="setup">
        <!-- Configure the compiler -->
        <property name="build.compiler" value="modern" />
        <property name="build.fork" value="false" />
        <property name="build.debug" value="on" />
        <property name="build.deprecation" value="on" />
        <property name="build.optimize" value="off" />
        <property name="build.nowarn" value="on" />
        <property name="build.listfiles" value="on" />
        <property name="build.failonerror" value="true" />
        
        <!-- Configure the project layout -->
        <property name="component.src" value="${component.home}/src/main/java" />
        <property name="component.resources" value="${component.home}/src/main/resources" />
        <property name="component.webresources" value="${component.home}/src/main/webapp" />
        <property name="component.lib" value="${component.home}/lib" />
        
        <!-- Prepare the build working area -->
        <mkdir dir="${component.build.dir}" />
        
        <property name="component.build.classes" value="${component.build.dir}/classes" />
        <mkdir dir="${component.build.classes}" />
    </target>
    
    <target name="build" depends="setup">
        <!-- Build the compilation/bundelization classpath -->
        <path id="component.build.classpath">
            <path refid="sdk.classpath" />
            <path path="${component.build.dependencies}" />
            <path path="${component.build.dependencies.external}" />
            <fileset dir="${component.lib}" includes="*.jar" erroronmissingdir="false" />
        </path>
        
        <!-- Compile if needed
        
             TODO It is amazingly hard to make javac do nothing if component.src is missing.
                  Must succeed and remove this final use of ant-contrib.
        -->
        <if>
            <available file="${component.src}" type="dir" />
            <then>
                <javac srcdir="${component.src}"
                       destdir="${component.build.classes}"
                       classpathref="component.build.classpath"
                       includeAntRuntime="false"
                       encoding="UTF-8"
                       fork="${build.fork}"
                       failonerror="${build.failonerror}"
                       debug="${build.debug}"
                       deprecation="${build.deprecation}"
                       optimize="${build.optimize}"
                       nowarn="${build.nowarn}"
                       listfiles="${build.listfiles}">
                    <!-- Pick annotation processors from the SDK --> 
                    <compilerarg value="-processorpath" />
                    <compilerarg pathref="sdk.classpath" />
                 </javac>
            </then>
        </if>

        <!-- Assemble the Bundle -->
        <bundle directives="${component.build.bnd}"
                classpathref="component.build.classpath">
            
            <classes dir="${component.build.classes}" includes="**/*" erroronmissingdir="false" />
            <resources dir="${component.resources}" excludes="META-INF/MANIFEST.MF" erroronmissingdir="false" />
            <!-- Add any other files produced by the compiler. E.g. by annotation processors --> 
            <resources dir="${component.build.classes}" excludes="**/*.class" erroronmissingdir="false" />
            <webresources dir="${component.webresources}" includes="**/*" erroronmissingdir="false" />
            <libs dir="${component.lib}" includes="*.jar" erroronmissingdir="false" />
        </bundle>
    </target>

    <target name="clean">
        <delete dir="${component.build.dir}" failonerror="false" />
    </target>
</project>